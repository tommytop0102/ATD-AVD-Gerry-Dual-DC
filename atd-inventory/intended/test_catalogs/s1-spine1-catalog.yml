anta.tests.connectivity:
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf1.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet2
    result_overwrite:
      custom_field: 'Local: Ethernet2 - Remote: s1-leaf1 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf2.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet3
    result_overwrite:
      custom_field: 'Local: Ethernet3 - Remote: s1-leaf2 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf3.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet4
    result_overwrite:
      custom_field: 'Local: Ethernet4 - Remote: s1-leaf3 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-leaf4.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet5
    result_overwrite:
      custom_field: 'Local: Ethernet5 - Remote: s1-leaf4 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr1.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet7
    result_overwrite:
      custom_field: 'Local: Ethernet7 - Remote: s1-brdr1 Ethernet2'
- VerifyLLDPNeighbors:
    neighbors:
    - neighbor_device: s1-brdr2.atd.lab
      neighbor_port: Ethernet2
      port: Ethernet8
    result_overwrite:
      custom_field: 'Local: Ethernet8 - Remote: s1-brdr2 Ethernet2'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.41
      repeat: 1
      source: 172.30.255.40
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet2 (IP: 172.30.255.40) - Destination:
        s1-leaf1 Ethernet2 (IP: 172.30.255.41)'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.45
      repeat: 1
      source: 172.30.255.44
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet3 (IP: 172.30.255.44) - Destination:
        s1-leaf2 Ethernet2 (IP: 172.30.255.45)'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.49
      repeat: 1
      source: 172.30.255.48
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet4 (IP: 172.30.255.48) - Destination:
        s1-leaf3 Ethernet2 (IP: 172.30.255.49)'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.53
      repeat: 1
      source: 172.30.255.52
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet5 (IP: 172.30.255.52) - Destination:
        s1-leaf4 Ethernet2 (IP: 172.30.255.53)'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.57
      repeat: 1
      source: 172.30.255.56
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet7 (IP: 172.30.255.56) - Destination:
        s1-brdr1 Ethernet2 (IP: 172.30.255.57)'
- VerifyReachability:
    hosts:
    - destination: 172.30.255.61
      repeat: 1
      source: 172.30.255.60
      vrf: default
    result_overwrite:
      custom_field: 'Source: P2P Interface Ethernet8 (IP: 172.30.255.60) - Destination:
        s1-brdr2 Ethernet2 (IP: 172.30.255.61)'
anta.tests.hardware:
- VerifyEnvironmentPower:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyEnvironmentCooling:
    result_overwrite:
      custom_field: 'Accepted States: ''ok'''
    states:
    - ok
- VerifyTemperature: null
- VerifyTransceiversManufacturers:
    manufacturers:
    - Arista Networks
    - Arastra, Inc.
    - Not Present
    result_overwrite:
      custom_field: 'Accepted Manufacturers: ''Arista Networks'', ''Arastra, Inc.'',
        ''Not Present'''
anta.tests.interfaces:
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet2
      status: up
    result_overwrite:
      custom_field: Interface Ethernet2 - P2P_LINK_TO_S1-LEAF1_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet3
      status: up
    result_overwrite:
      custom_field: Interface Ethernet3 - P2P_LINK_TO_S1-LEAF2_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet4
      status: up
    result_overwrite:
      custom_field: Interface Ethernet4 - P2P_LINK_TO_S1-LEAF3_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet5
      status: up
    result_overwrite:
      custom_field: Interface Ethernet5 - P2P_LINK_TO_S1-LEAF4_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet7
      status: up
    result_overwrite:
      custom_field: Interface Ethernet7 - P2P_LINK_TO_S1-BRDR1_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Ethernet8
      status: up
    result_overwrite:
      custom_field: Interface Ethernet8 - P2P_LINK_TO_S1-BRDR2_Ethernet2 = 'up'
- VerifyInterfacesStatus:
    interfaces:
    - name: Loopback0
      status: up
    result_overwrite:
      custom_field: Interface Loopback0 - EVPN_Overlay_Peering = 'up'
anta.tests.routing.bgp:
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.17
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-brdr1 (IP: 192.0.255.17)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.18
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-brdr2 (IP: 192.0.255.18)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.13
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf1 (IP: 192.0.255.13)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.14
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf2 (IP: 192.0.255.14)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.15
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf3 (IP: 192.0.255.15)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: evpn
      peers:
      - 192.0.255.16
    result_overwrite:
      custom_field: 'BGP EVPN Peer: s1-leaf4 (IP: 192.0.255.16)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.41
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf1 (IP: 172.30.255.41)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.45
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf2 (IP: 172.30.255.45)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.49
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf3 (IP: 172.30.255.49)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.53
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-leaf4 (IP: 172.30.255.53)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.57
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-brdr1 (IP: 172.30.255.57)'
- VerifyBGPSpecificPeers:
    address_families:
    - afi: ipv4
      peers:
      - 172.30.255.61
      safi: unicast
    result_overwrite:
      custom_field: 'BGP IPv4 Unicast Peer: s1-brdr2 (IP: 172.30.255.61)'
anta.tests.routing.generic:
- VerifyRoutingProtocolModel:
    model: multi-agent
    result_overwrite:
      custom_field: 'Routing protocol model: multi-agent'
anta.tests.system:
- VerifyNTP: null
